# .github/workflows/playwright-daily.yml
# Runs Playwright test shards every day at **11 : 42 AM IST** (06 : 12 UTC)
# plus anytime you trigger it manually from the Actions tab.

name: Run Playwright tests

on:
  push:          # runs on every push
  pull_request:  # runs on new PRs or PR updates
  schedule:
    - cron: '30 3 * * 1-5'
  workflow_dispatch:

jobs:
  run-tests:
    name: Run Playwright shards
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # chromium → shards 1-5 (5 runs)
          - { project: chromium, shardIndex: 1, shardTotal: 20 }
          - { project: chromium, shardIndex: 2, shardTotal: 20 }
          - { project: chromium, shardIndex: 3, shardTotal: 20 }
          - { project: chromium, shardIndex: 4, shardTotal: 20 }
          - { project: chromium, shardIndex: 5, shardTotal: 20 }
          # firefox → shards 6-10 (5 runs)
          - { project: firefox, shardIndex: 6, shardTotal: 20 }
          - { project: firefox, shardIndex: 7, shardTotal: 20 }
          - { project: firefox, shardIndex: 8, shardTotal: 20 }
          - { project: firefox, shardIndex: 9, shardTotal: 20 }
          - { project: firefox, shardIndex: 10, shardTotal: 20 }
          # webkit → shards 11-15 (5 runs)
          - { project: webkit, shardIndex: 11, shardTotal: 20 }
          - { project: webkit, shardIndex: 12, shardTotal: 20 }
          - { project: webkit, shardIndex: 13, shardTotal: 20 }
          - { project: webkit, shardIndex: 14, shardTotal: 20 }
          - { project: webkit, shardIndex: 15, shardTotal: 20 }
          # android → shards 16-17 (2 runs)
          - { project: android, shardIndex: 16, shardTotal: 20 }
          - { project: android, shardIndex: 17, shardTotal: 20 }
          # ios → shards 18-20 (3 runs)
          - { project: ios, shardIndex: 18, shardTotal: 20 }
          - { project: ios, shardIndex: 19, shardTotal: 20 }
          - { project: ios, shardIndex: 20, shardTotal: 20 }

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create .env file
        run: |
          echo "USERNAME=${{ secrets.USERNAME }}" >> .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
          echo "NEW_PASSWORD=${{ secrets.NEW_PASSWORD }}" >> .env
          echo "FIRST_NAME=${{ secrets.FIRST_NAME }}" >> .env
          echo "STREET_NAME=${{ secrets.STREET_NAME }}" >> .env
          echo "CITY=${{ secrets.CITY }}" >> .env
          echo "STATE=${{ secrets.STATE }}" >> .env
          echo "COUNTRY=${{ secrets.COUNTRY }}" >> .env
          echo "ZIP_CODE=${{ secrets.ZIP_CODE }}" >> .env
     
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps + browsers
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run shard ${{ matrix.shardIndex }} on ${{ matrix.project }}
        run: npx playwright test --project=${{ matrix.project }} --reporter=blob --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.project }}-${{ matrix.shardIndex }}
          path: ./blob-report
          retention-days: 1

  merge-reports:
    name: Merge Reports
    needs: run-tests
    if: always()             # run even if some shards fail
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps + browsers
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          path: ./all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge HTML & JSON reports
        run: npx playwright merge-reports --config=playwright.config.js ./all-blob-reports

      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: Playwright Test Report
          path: ./playwright-report
          retention-days: 14

      - name: Send TestDino report
        run: |
         npx --yes tdpw ./playwright-report \
           --token="${{ secrets.TESTDINO_TOKEN }}" \
           --upload-html \
           --verbose
